"""
Django settings for web_project project.

Generated by 'django-admin startproject' using Django 4.2.19.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import environ
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# BASE_DIR 설정
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# 환경 변수 로드
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

# OpenAI API Key 설정
OPENAI_API_KEY = env("OPENAI_API_KEY")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2-zgbglso)g721#uifnqxklx)vippmhyi^e569rcg7)9tnskh&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['15.168.221.131', 'localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'hobbies',
    'analysis.apps.AnalysisConfig',
    'crawled_data',
    'phone_recommendations',
    'django_extensions',
    'django_plotly_dash.apps.DjangoPlotlyDashConfig',  # Django 프로젝트에 Dash 앱을 연결
    'dpd_static_support',   # Dash 관련 JS/CSS 스태틱 파일을 서빙
    # 'channels',   # 비동기 처리
    # 'dpds',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_plotly_dash.middleware.BaseMiddleware',
]

X_FRAME_OPTIONS = 'SAMEORIGIN'


ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'
ASGI_APPLICATION = 'web_project.routing.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'SNS_DB', 
        'USER': 'lab13',
        'PASSWORD': 'lab13',  
        'HOST': 'localhost', 
        'PORT': '3306',  
        'OPTIONS': {
            'charset': 'utf8mb4',
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'django_plotly_dash.finders.DashAssetFinder',
    'django_plotly_dash.finders.DashComponentFinder',
    'django_plotly_dash.finders.DashAppDirectoryFinder',
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 세션 엔진
SESSION_ENGINE = 'django.contrib.sessions.backends.db'

# 세션 이름
SESSION_COOKIE_NAME = "sessionid"  

# 세션 쿠키 수명 (1시간)
SESSION_COOKIE_AGE = 3600

# 브라우저 종료 시 세션 유지 여부
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # False면 브라우저 종료 후에도 유지됨

# 요청마다 세션을 저장할지 여부
SESSION_SAVE_EVERY_REQUEST = True  # 요청이 있을 때마다 세션 갱신

# 보안 설정 (HTTPS 사용 시)
SESSION_COOKIE_SECURE = False  # HTTPS 적용 시 True로 변경
SESSION_COOKIE_HTTPONLY = True  # 자바스크립트에서 접근 못 하도록 보호
SESSION_COOKIE_SAMESITE = None  # 다른 사이트에서 세션 쿠키 접근 제한

# Celery 설정
CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Redis 브로커 URL
CELERY_ACCEPT_CONTENT = ['json']  # 메시지 포맷 (JSON 형식)
CELERY_TASK_SERIALIZER = 'json'  # 직렬화 방식
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'  # 결과를 Redis에 저장
CELERY_TIMEZONE = 'Asia/Seoul'  # 타임존 설정